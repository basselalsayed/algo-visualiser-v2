{
  "aStarE": {
    "description": "Может найти кратчайший путь.\nИспользует эвристику прямой линии для выбора направления поиска.",
    "header": "Взвешенный",
    "name": "A* Евклид"
  },
  "aStarM": {
    "description": "Находит кратчайший путь.\nПохож на Дейкстру, но использует эвристику 'такси' для направления поиска.",
    "header": "Взвешенный",
    "name": "A* Манхэттен"
  },
  "bfs": {
    "description": "Находит кратчайший путь.\nИсследует все ветви графа.\nИщет новый путь только после того, как текущий полностью исследован.",
    "header": "Не взвешенный",
    "name": "Поиск в ширину"
  },
  "dfs": {
    "description": "Не находит кратчайший путь.\nИсследует все ветви графа.",
    "header": "Не взвешенный",
    "name": "Поиск в глубину"
  },
  "dijkstra": {
    "description": "Всегда находит кратчайший путь.\nИспользует расстояние узлов для выбора направления.",
    "header": "Взвешенный",
    "name": "Дейкстра"
  }
}
