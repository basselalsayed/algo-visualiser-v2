{
  "aStarE": {
    "description": "Μπορεί να βρει τη συντομότερη διαδρομή.\nΧρησιμοποιεί τη «ευθεία γραμμή» για να καθορίσει την κατεύθυνση της αναζήτησης.",
    "header": "Βαρυμένος",
    "name": "A* Ευκλείδιος"
  },
  "aStarM": {
    "description": "Βρίσκει τη συντομότερη διαδρομή.\nΠαρόμοιο με το Dijkstra, αλλά χρησιμοποιεί την ευρετική \"ταξί\" για να καθοδηγήσει την αναζήτηση.",
    "header": "Βαρυμένος",
    "name": "A* Manhattan"
  },
  "bfs": {
    "description": "Θα βρει τη συντομότερη διαδρομή.\nΕξετάζει κάθε κλαδί ενός γράφου.\nΘα αναζητήσει διαδρομές μόνο αφού το τρέχον μονοπάτι εξερευνηθεί πλήρως.",
    "header": "Ακατάλληλο",
    "name": "Αναζήτηση Σε Πλάτος"
  },
  "dfs": {
    "description": "Δεν θα βρει τη συντομότερη διαδρομή.\nΕξετάζει κάθε κλαδί ενός γράφου.",
    "header": "Ακατάλληλο",
    "name": "Αναζήτηση Σε Βάθος"
  },
  "dijkstra": {
    "description": "Πάντα βρίσκει τη συντομότερη διαδρομή.\nΧρησιμοποιεί την απόσταση των κόμβων για να επιλέξει κατεύθυνση.",
    "header": "Βαρυμένος",
    "name": "Ντάικστρα"
  }
}
